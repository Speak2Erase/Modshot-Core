/*
** aleffect-binding.cpp
**
** This file is part of Modshot.
*/

#include "al-util.h"
#include "binding-util.h"
#include "efx-presets.h"

// helpers

#define ALEFFECT_NUM2FLOAT(v, name) \
	float name; \
	switch(rb_type(v)) { \
		case RUBY_T_FLOAT: \
			name = NUM2DBL(v); \
			break; \
		case RUBY_T_FIXNUM: \
			name = FIX2INT(v); \
			break; \
		default: \
			rb_raise(rb_eTypeError, "Expected float for " #name); \
	}

#define ALEFFECT_INIT_ATTRIBUTE_FLOAT(defaultval, name) \
	rb_iv_set(self, "@" #name, DBL2NUM(defaultval));

#define ALEFFECT_INIT_ATTRIBUTE_FLOAT3(defaultval, name) \
	rb_iv_set(self, "@" #name, rb_ary_new3(3, DBL2NUM(defaultval), DBL2NUM(defaultval), DBL2NUM(defaultval)));

#define ALEFFECT_INIT_ATTRIBUTE_INT(defaultval, name) \
	rb_iv_set(self, "@" #name, INT2NUM(defaultval));

#define ALEFFECT_SET_ATTRIBUTE_FLOAT(enumname, name) \
	ALEFFECT_NUM2FLOAT(rb_iv_get(self, "@" #name), name) \
	alEffectf(id, enumname, name);

#define ALEFFECT_SET_ATTRIBUTE_FLOAT3(enumname, name) \
	float name##arr[3]; \
	VALUE name = rb_iv_get(self, "@" #name); \
	if (rb_type(name) != RUBY_T_ARRAY || rb_array_len(name) != 3) { \
		rb_raise(rb_eTypeError, "Expected array of 3 floats for " #name); \
	} \
	ALEFFECT_NUM2FLOAT(rb_ary_entry(name, 0), name##x) \
	ALEFFECT_NUM2FLOAT(rb_ary_entry(name, 1), name##y) \
	ALEFFECT_NUM2FLOAT(rb_ary_entry(name, 2), name##z) \
	name##arr[0] = name##x; \
	name##arr[1] = name##y; \
	name##arr[2] = name##z; \
	alEffectfv(id, enumname, name##arr);

#define ALEFFECT_SET_ATTRIBUTE_INT(enumname, name) \
	VALUE name = rb_iv_get(self, "@" #name); \
	if (rb_type(name) == RUBY_T_FIXNUM) { \
		alEffecti(id, enumname, FIX2INT(name)); \
	} else { \
		rb_raise(rb_eTypeError, "Expected int for " #name); \
	}

#define ALEFFECT_CREATE_CLASS(type) \
	VALUE rb_c##type = rb_define_class_under(module, #type, rb_cAlEffect); \
	_rb_define_method(rb_c##type, "initialize", rb_aleffect_##type##_init); \
	_rb_define_method(rb_c##type, "create_underlying_effect", rb_aleffect_##type##_createUnderlyingEffect);

#define ALEFFECT_EXPOSE_ATTRIBUTE(type, name) \
	rb_define_attr(rb_c##type, #name, 1, 1);

// EAXReverb
RB_METHOD(rb_aleffect_EAXReverb_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_DENSITY, density)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_DIFFUSION, diffusion)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_GAIN, gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_GAINHF, gainhf)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_GAINLF, gainlf)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_DECAY_TIME, decay_time)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_DECAY_HFRATIO, decay_hfratio)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_DECAY_LFRATIO, decay_lfratio)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_REFLECTIONS_GAIN, reflections_gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_REFLECTIONS_DELAY, reflections_delay)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT3(AL_EAXREVERB_DEFAULT_REFLECTIONS_PAN_XYZ, reflections_pan)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_LATE_REVERB_GAIN, late_reverb_gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_LATE_REVERB_DELAY, late_reverb_delay)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT3(AL_EAXREVERB_DEFAULT_LATE_REVERB_PAN_XYZ, late_reverb_pan)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_ECHO_TIME, echo_time)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_ECHO_DEPTH, echo_depth)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_MODULATION_TIME, modulation_time)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_MODULATION_DEPTH, modulation_depth)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_AIR_ABSORPTION_GAINHF, air_absorption_gainhf)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_HFREFERENCE, hfreference)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_LFREFERENCE, lfreference)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EAXREVERB_DEFAULT_ROOM_ROLLOFF_FACTOR, room_rolloff_factor)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_EAXREVERB_DEFAULT_DECAY_HFLIMIT, decay_hflimit)
	return self;
}
RB_METHOD(rb_aleffect_EAXReverb_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_EAXREVERB);
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_DENSITY, density)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_DIFFUSION, diffusion)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_GAIN, gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_GAINHF, gainhf)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_GAINLF, gainlf)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_DECAY_TIME, decay_time)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_DECAY_HFRATIO, decay_hfratio)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_DECAY_LFRATIO, decay_lfratio)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_REFLECTIONS_GAIN, reflections_gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_REFLECTIONS_DELAY, reflections_delay)
	ALEFFECT_SET_ATTRIBUTE_FLOAT3(AL_EAXREVERB_REFLECTIONS_PAN, reflections_pan)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_LATE_REVERB_GAIN, late_reverb_gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_LATE_REVERB_DELAY, late_reverb_delay)
	ALEFFECT_SET_ATTRIBUTE_FLOAT3(AL_EAXREVERB_LATE_REVERB_PAN, late_reverb_pan)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_ECHO_TIME, echo_time)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_ECHO_DEPTH, echo_depth)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_MODULATION_TIME, modulation_time)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_MODULATION_DEPTH, modulation_depth)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_AIR_ABSORPTION_GAINHF, air_absorption_gainhf)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_HFREFERENCE, hfreference)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_LFREFERENCE, lfreference)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EAXREVERB_ROOM_ROLLOFF_FACTOR, room_rolloff_factor)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_EAXREVERB_DECAY_HFLIMIT, decay_hflimit)
	return INT2NUM(id);
}

// Reverb
RB_METHOD(rb_aleffect_Reverb_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_DENSITY, density)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_DIFFUSION, diffusion)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_GAIN, gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_GAINHF, gainhf)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_DECAY_TIME, decay_time)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_DECAY_HFRATIO, decay_hfratio)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_REFLECTIONS_GAIN, reflections_gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_REFLECTIONS_DELAY, reflections_delay)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_LATE_REVERB_GAIN, late_reverb_gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_LATE_REVERB_DELAY, late_reverb_delay)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_AIR_ABSORPTION_GAINHF, air_absorption_gainhf)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_REVERB_DEFAULT_ROOM_ROLLOFF_FACTOR, room_rolloff_factor)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_REVERB_DEFAULT_DECAY_HFLIMIT, decay_hflimit)
	return self;
}
RB_METHOD(rb_aleffect_Reverb_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_REVERB);
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_DENSITY, density)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_DIFFUSION, diffusion)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_GAIN, gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_GAINHF, gainhf)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_DECAY_TIME, decay_time)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_DECAY_HFRATIO, decay_hfratio)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_REFLECTIONS_GAIN, reflections_gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_REFLECTIONS_DELAY, reflections_delay)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_LATE_REVERB_GAIN, late_reverb_gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_LATE_REVERB_DELAY, late_reverb_delay)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_AIR_ABSORPTION_GAINHF, air_absorption_gainhf)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_REVERB_ROOM_ROLLOFF_FACTOR, room_rolloff_factor)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_REVERB_DECAY_HFLIMIT, decay_hflimit)
	return INT2NUM(id);
}

// Chorus
RB_METHOD(rb_aleffect_Chorus_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_CHORUS_DEFAULT_WAVEFORM, waveform)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_CHORUS_DEFAULT_PHASE, phase)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_CHORUS_DEFAULT_RATE, rate)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_CHORUS_DEFAULT_DEPTH, depth)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_CHORUS_DEFAULT_FEEDBACK, feedback)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_CHORUS_DEFAULT_DELAY, delay)
	return self;
}
RB_METHOD(rb_aleffect_Chorus_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_CHORUS);
	ALEFFECT_SET_ATTRIBUTE_INT(AL_CHORUS_WAVEFORM, waveform)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_CHORUS_PHASE, phase)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_CHORUS_RATE, rate)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_CHORUS_DEPTH, depth)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_CHORUS_FEEDBACK, feedback)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_CHORUS_DELAY, delay)
	return INT2NUM(id);
}

// Distortion
RB_METHOD(rb_aleffect_Distortion_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_DISTORTION_DEFAULT_EDGE, edge)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_DISTORTION_DEFAULT_GAIN, gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_DISTORTION_DEFAULT_LOWPASS_CUTOFF, lowpass_cutoff)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_DISTORTION_DEFAULT_EQCENTER, eqcenter)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_DISTORTION_DEFAULT_EQBANDWIDTH, eqbandwidth)	
	return self;
}
RB_METHOD(rb_aleffect_Distortion_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_DISTORTION);
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_DISTORTION_EDGE, edge)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_DISTORTION_GAIN, gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_DISTORTION_LOWPASS_CUTOFF, lowpass_cutoff)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_DISTORTION_EQCENTER, eqcenter)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_DISTORTION_EQBANDWIDTH, eqbandwidth)
	return INT2NUM(id);
}

// Echo
RB_METHOD(rb_aleffect_Echo_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_ECHO_DEFAULT_DELAY, delay)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_ECHO_DEFAULT_LRDELAY, lrdelay)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_ECHO_DEFAULT_DAMPING, damping)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_ECHO_DEFAULT_FEEDBACK, feedback)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_ECHO_DEFAULT_SPREAD, spread)
	return self;
}
RB_METHOD(rb_aleffect_Echo_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_ECHO);
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_ECHO_DELAY, delay)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_ECHO_LRDELAY, lrdelay)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_ECHO_DAMPING, damping)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_ECHO_FEEDBACK, feedback)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_ECHO_SPREAD, spread)
	return INT2NUM(id);
}

// Flanger
RB_METHOD(rb_aleffect_Flanger_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_FLANGER_DEFAULT_WAVEFORM, waveform)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_FLANGER_DEFAULT_PHASE, phase)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_FLANGER_DEFAULT_RATE, rate)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_FLANGER_DEFAULT_DEPTH, depth)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_FLANGER_DEFAULT_FEEDBACK, feedback)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_FLANGER_DEFAULT_DELAY, delay)
	return self;
}
RB_METHOD(rb_aleffect_Flanger_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_FLANGER);
	ALEFFECT_SET_ATTRIBUTE_INT(AL_FLANGER_WAVEFORM, waveform)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_FLANGER_PHASE, phase)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_FLANGER_RATE, rate)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_FLANGER_DEPTH, depth)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_FLANGER_FEEDBACK, feedback)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_FLANGER_DELAY, delay)
	return INT2NUM(id);
}

// FrequencyShifter
RB_METHOD(rb_aleffect_FrequencyShifter_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_FREQUENCY_SHIFTER_DEFAULT_FREQUENCY, frequency)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_FREQUENCY_SHIFTER_DEFAULT_LEFT_DIRECTION, left_direction)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_FREQUENCY_SHIFTER_DEFAULT_RIGHT_DIRECTION, right_direction)
	return self;
}
RB_METHOD(rb_aleffect_FrequencyShifter_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_FREQUENCY_SHIFTER);
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_FREQUENCY_SHIFTER_FREQUENCY, frequency)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_FREQUENCY_SHIFTER_LEFT_DIRECTION, left_direction)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_FREQUENCY_SHIFTER_RIGHT_DIRECTION, right_direction)
	return INT2NUM(id);
}

// VocalMorpher
RB_METHOD(rb_aleffect_VocalMorpher_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_VOCAL_MORPHER_DEFAULT_PHONEMEA, phoneme_a)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_VOCAL_MORPHER_DEFAULT_PHONEMEB, phoneme_b)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_VOCAL_MORPHER_DEFAULT_PHONEMEA_COARSE_TUNING, phoneme_a_coarse_tuning)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_VOCAL_MORPHER_DEFAULT_PHONEMEB_COARSE_TUNING, phoneme_b_coarse_tuning)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_VOCAL_MORPHER_DEFAULT_WAVEFORM, waveform)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_VOCAL_MORPHER_DEFAULT_RATE, rate)
	return self;
}
RB_METHOD(rb_aleffect_VocalMorpher_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_VOCAL_MORPHER);
	ALEFFECT_SET_ATTRIBUTE_INT(AL_VOCAL_MORPHER_PHONEMEA, phoneme_a)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_VOCAL_MORPHER_PHONEMEB, phoneme_b)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_VOCAL_MORPHER_PHONEMEA_COARSE_TUNING, phoneme_a_coarse_tuning)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_VOCAL_MORPHER_PHONEMEB_COARSE_TUNING, phoneme_b_coarse_tuning)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_VOCAL_MORPHER_WAVEFORM, waveform)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_VOCAL_MORPHER_RATE, rate)
	return INT2NUM(id);
}

// PitchShifter
RB_METHOD(rb_aleffect_PitchShifter_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_PITCH_SHIFTER_DEFAULT_COARSE_TUNE, coarse_tune)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_PITCH_SHIFTER_DEFAULT_FINE_TUNE, fine_tune)
	return self;
}
RB_METHOD(rb_aleffect_PitchShifter_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_PITCH_SHIFTER);
	ALEFFECT_SET_ATTRIBUTE_INT(AL_PITCH_SHIFTER_COARSE_TUNE, coarse_tune)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_PITCH_SHIFTER_FINE_TUNE, fine_tune)
	return INT2NUM(id);
}

// RingModulator
RB_METHOD(rb_aleffect_RingModulator_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_RING_MODULATOR_DEFAULT_FREQUENCY, frequency)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_RING_MODULATOR_DEFAULT_HIGHPASS_CUTOFF, highpass_cutoff)
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_RING_MODULATOR_DEFAULT_WAVEFORM, waveform)
	return self;
}
RB_METHOD(rb_aleffect_RingModulator_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_RING_MODULATOR);
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_RING_MODULATOR_FREQUENCY, frequency)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_RING_MODULATOR_HIGHPASS_CUTOFF, highpass_cutoff)
	ALEFFECT_SET_ATTRIBUTE_INT(AL_RING_MODULATOR_WAVEFORM, waveform)
	return INT2NUM(id);
}

// AutoWah
RB_METHOD(rb_aleffect_AutoWah_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_AUTOWAH_DEFAULT_ATTACK_TIME, attack_time)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_AUTOWAH_DEFAULT_RELEASE_TIME, release_time)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_AUTOWAH_DEFAULT_RESONANCE, resonance)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_AUTOWAH_DEFAULT_PEAK_GAIN, peak_gain)
	return self;
}
RB_METHOD(rb_aleffect_AutoWah_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_AUTOWAH);
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_AUTOWAH_ATTACK_TIME, attack_time)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_AUTOWAH_RELEASE_TIME, release_time)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_AUTOWAH_RESONANCE, resonance)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_AUTOWAH_PEAK_GAIN, peak_gain)
	return INT2NUM(id);
}

// Compressor
RB_METHOD(rb_aleffect_Compressor_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_INT(AL_COMPRESSOR_DEFAULT_ONOFF, onoff)
	return self;
}
RB_METHOD(rb_aleffect_Compressor_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_COMPRESSOR);
	ALEFFECT_SET_ATTRIBUTE_INT(AL_COMPRESSOR_ONOFF, onoff)
	return INT2NUM(id);
}

// Equalizer
RB_METHOD(rb_aleffect_Equalizer_init) {
	RB_UNUSED_PARAM;
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EQUALIZER_DEFAULT_LOW_GAIN, low_gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EQUALIZER_DEFAULT_LOW_CUTOFF, low_cutoff)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EQUALIZER_DEFAULT_MID1_GAIN, mid1_gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EQUALIZER_DEFAULT_MID1_CENTER, mid1_center)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EQUALIZER_DEFAULT_MID1_WIDTH, mid1_width)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EQUALIZER_DEFAULT_MID2_GAIN, mid2_gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EQUALIZER_DEFAULT_MID2_CENTER, mid2_center)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EQUALIZER_DEFAULT_MID2_WIDTH, mid2_width)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EQUALIZER_DEFAULT_HIGH_GAIN, high_gain)
	ALEFFECT_INIT_ATTRIBUTE_FLOAT(AL_EQUALIZER_DEFAULT_HIGH_CUTOFF, high_cutoff)
	return self;
}
RB_METHOD(rb_aleffect_Equalizer_createUnderlyingEffect) {
	RB_UNUSED_PARAM;
	ALuint id;
	alGenEffects(1, &id);
	alEffecti(id, AL_EFFECT_TYPE, AL_EFFECT_EQUALIZER);
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EQUALIZER_LOW_GAIN, low_gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EQUALIZER_LOW_CUTOFF, low_cutoff)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EQUALIZER_MID1_GAIN, mid1_gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EQUALIZER_MID1_CENTER, mid1_center)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EQUALIZER_MID1_WIDTH, mid1_width)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EQUALIZER_MID2_GAIN, mid2_gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EQUALIZER_MID2_CENTER, mid2_center)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EQUALIZER_MID2_WIDTH, mid2_width)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EQUALIZER_HIGH_GAIN, high_gain)
	ALEFFECT_SET_ATTRIBUTE_FLOAT(AL_EQUALIZER_HIGH_CUTOFF, high_cutoff)
	return INT2NUM(id);
}

// EAXReverb Presets
#define ALEFFECT_SET_PRESET_FLOAT(name, value) \
	rb_iv_set(self, "@" #name, DBL2NUM(value));

#define ALEFFECT_SET_PRESET_FLOAT3(name, value) \
	rb_iv_set(self, "@" #name, rb_ary_new3(3, DBL2NUM(value[0]), DBL2NUM(value[1]), DBL2NUM(value[2])));

#define ALEFFECT_SET_PRESET_INT(name, value) \
	rb_iv_set(self, "@" #name, INT2NUM(value));

#define ALEFFECT_DEFINE_PRESET(preset, name) \
	RB_METHOD(rb_aleffect_EAXReverb_load_preset_##name) { \
		RB_UNUSED_PARAM; \
		EFXEAXREVERBPROPERTIES properties = preset; \
			ALEFFECT_SET_PRESET_FLOAT(density, properties.flDensity) \
			ALEFFECT_SET_PRESET_FLOAT(diffusion, properties.flDiffusion) \
			ALEFFECT_SET_PRESET_FLOAT(gain, properties.flGain) \
			ALEFFECT_SET_PRESET_FLOAT(gainhf, properties.flGainHF) \
			ALEFFECT_SET_PRESET_FLOAT(gainlf, properties.flGainLF) \
			ALEFFECT_SET_PRESET_FLOAT(decay_time, properties.flDecayTime) \
			ALEFFECT_SET_PRESET_FLOAT(decay_hfratio, properties.flDecayHFRatio) \
			ALEFFECT_SET_PRESET_FLOAT(decay_lfratio, properties.flDecayLFRatio) \
			ALEFFECT_SET_PRESET_FLOAT(reflections_gain, properties.flReflectionsGain) \
			ALEFFECT_SET_PRESET_FLOAT(reflections_delay, properties.flReflectionsDelay) \
			ALEFFECT_SET_PRESET_FLOAT3(reflections_pan, properties.flReflectionsPan) \
			ALEFFECT_SET_PRESET_FLOAT(late_reverb_gain, properties.flLateReverbGain) \
			ALEFFECT_SET_PRESET_FLOAT(late_reverb_delay, properties.flLateReverbDelay) \
			ALEFFECT_SET_PRESET_FLOAT3(late_reverb_pan, properties.flLateReverbPan) \
			ALEFFECT_SET_PRESET_FLOAT(echo_time, properties.flEchoTime) \
			ALEFFECT_SET_PRESET_FLOAT(echo_depth, properties.flEchoDepth) \
			ALEFFECT_SET_PRESET_FLOAT(modulation_time, properties.flModulationTime) \
			ALEFFECT_SET_PRESET_FLOAT(modulation_depth, properties.flModulationDepth) \
			ALEFFECT_SET_PRESET_FLOAT(air_absorption_gainhf, properties.flAirAbsorptionGainHF) \
			ALEFFECT_SET_PRESET_FLOAT(hfreference, properties.flHFReference) \
			ALEFFECT_SET_PRESET_FLOAT(lfreference, properties.flLFReference) \
			ALEFFECT_SET_PRESET_FLOAT(room_rolloff_factor, properties.flRoomRolloffFactor) \
			ALEFFECT_SET_PRESET_INT(decay_hflimit, properties.iDecayHFLimit) \
		return Qnil; \
	}

#define ALEFFECT_EXPOSE_PRESET(name) \
	_rb_define_method(rb_cEAXReverb, "load_preset_" #name, rb_aleffect_EAXReverb_load_preset_##name);

ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_GENERIC, generic)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PADDEDCELL, paddedcell)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ROOM, room)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_BATHROOM, bathroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_LIVINGROOM, livingroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_STONEROOM, stoneroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_AUDITORIUM, auditorium)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CONCERTHALL, concerthall)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CAVE, cave)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ARENA, arena)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_HANGAR, hangar)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CARPETEDHALLWAY, carpetedhallway)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_HALLWAY, hallway)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_STONECORRIDOR, stonecorridor)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ALLEY, alley)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_FOREST, forest)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CITY, city)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_MOUNTAINS, mountains)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_QUARRY, quarry)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PLAIN, plain)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PARKINGLOT, parkinglot)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SEWERPIPE, sewerpipe)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_UNDERWATER, underwater)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DRUGGED, drugged)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DIZZY, dizzy)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PSYCHOTIC, psychotic)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CASTLE_SMALLROOM, castle_smallroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CASTLE_SHORTPASSAGE, castle_shortpassage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CASTLE_MEDIUMROOM, castle_mediumroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CASTLE_LARGEROOM, castle_largeroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CASTLE_LONGPASSAGE, castle_longpassage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CASTLE_HALL, castle_hall)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CASTLE_CUPBOARD, castle_cupboard)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CASTLE_COURTYARD, castle_courtyard)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CASTLE_ALCOVE, castle_alcove)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_FACTORY_SMALLROOM, factory_smallroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_FACTORY_SHORTPASSAGE, factory_shortpassage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_FACTORY_MEDIUMROOM, factory_mediumroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_FACTORY_LARGEROOM, factory_largeroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_FACTORY_LONGPASSAGE, factory_longpassage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_FACTORY_HALL, factory_hall)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_FACTORY_CUPBOARD, factory_cupboard)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_FACTORY_COURTYARD, factory_courtyard)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_FACTORY_ALCOVE, factory_alcove)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ICEPALACE_SMALLROOM, icepalace_smallroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ICEPALACE_SHORTPASSAGE, icepalace_shortpassage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ICEPALACE_MEDIUMROOM, icepalace_mediumroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ICEPALACE_LARGEROOM, icepalace_largeroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ICEPALACE_LONGPASSAGE, icepalace_longpassage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ICEPALACE_HALL, icepalace_hall)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ICEPALACE_CUPBOARD, icepalace_cupboard)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ICEPALACE_COURTYARD, icepalace_courtyard)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_ICEPALACE_ALCOVE, icepalace_alcove)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPACESTATION_SMALLROOM, spacestation_smallroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPACESTATION_SHORTPASSAGE, spacestation_shortpassage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPACESTATION_MEDIUMROOM, spacestation_mediumroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPACESTATION_LARGEROOM, spacestation_largeroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPACESTATION_LONGPASSAGE, spacestation_longpassage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPACESTATION_HALL, spacestation_hall)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPACESTATION_CUPBOARD, spacestation_cupboard)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPACESTATION_ALCOVE, spacestation_alcove)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_WOODEN_SMALLROOM, wooden_smallroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_WOODEN_SHORTPASSAGE, wooden_shortpassage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_WOODEN_MEDIUMROOM, wooden_mediumroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_WOODEN_LARGEROOM, wooden_largeroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_WOODEN_LONGPASSAGE, wooden_longpassage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_WOODEN_HALL, wooden_hall)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_WOODEN_CUPBOARD, wooden_cupboard)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_WOODEN_COURTYARD, wooden_courtyard)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_WOODEN_ALCOVE, wooden_alcove)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPORT_EMPTYSTADIUM, sport_emptystadium)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPORT_SQUASHCOURT, sport_squashcourt)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPORT_SMALLSWIMMINGPOOL, sport_smallswimmingpool)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPORT_LARGESWIMMINGPOOL, sport_largeswimmingpool)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPORT_GYMNASIUM, sport_gymnasium)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPORT_FULLSTADIUM, sport_fullstadium)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SPORT_STADIUMTANNOY, sport_stadiumtannoy)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PREFAB_WORKSHOP, prefab_workshop)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PREFAB_SCHOOLROOM, prefab_schoolroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PREFAB_PRACTISEROOM, prefab_practiseroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PREFAB_OUTHOUSE, prefab_outhouse)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PREFAB_CARAVAN, prefab_caravan)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DOME_TOMB, dome_tomb)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PIPE_SMALL, pipe_small)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DOME_SAINTPAULS, dome_saintpauls)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PIPE_LONGTHIN, pipe_longthin)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PIPE_LARGE, pipe_large)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_PIPE_RESONANT, pipe_resonant)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_OUTDOORS_BACKYARD, outdoors_backyard)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_OUTDOORS_ROLLINGPLAINS, outdoors_rollingplains)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_OUTDOORS_DEEPCANYON, outdoors_deepcanyon)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_OUTDOORS_CREEK, outdoors_creek)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_OUTDOORS_VALLEY, outdoors_valley)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_MOOD_HEAVEN, mood_heaven)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_MOOD_HELL, mood_hell)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_MOOD_MEMORY, mood_memory)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DRIVING_COMMENTATOR, driving_commentator)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DRIVING_PITGARAGE, driving_pitgarage)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DRIVING_INCAR_RACER, driving_incar_racer)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DRIVING_INCAR_SPORTS, driving_incar_sports)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DRIVING_INCAR_LUXURY, driving_incar_luxury)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DRIVING_FULLGRANDSTAND, driving_fullgrandstand)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DRIVING_EMPTYGRANDSTAND, driving_emptygrandstand)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DRIVING_TUNNEL, driving_tunnel)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CITY_STREETS, city_streets)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CITY_SUBWAY, city_subway)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CITY_MUSEUM, city_museum)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CITY_LIBRARY, city_library)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CITY_UNDERPASS, city_underpass)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CITY_ABANDONED, city_abandoned)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_DUSTYROOM, dustyroom)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_CHAPEL, chapel)
ALEFFECT_DEFINE_PRESET(EFX_REVERB_PRESET_SMALLWATERROOM, smallwaterroom)

void aleffectBindingInit()
{
	VALUE module = rb_define_module("ALEffect");
	VALUE rb_cAlEffect = rb_define_class_under(module, "ALEffect", rb_cObject);

	ALEFFECT_CREATE_CLASS(EAXReverb)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, density)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, diffusion)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, gainhf)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, gainlf)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, decay_time)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, decay_hfratio)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, decay_lfratio)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, reflections_gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, reflections_delay)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, reflections_pan)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, late_reverb_gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, late_reverb_delay)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, late_reverb_pan)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, echo_time)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, echo_depth)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, modulation_time)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, modulation_depth)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, air_absorption_gainhf)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, hfreference)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, lfreference)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, room_rolloff_factor)
	ALEFFECT_EXPOSE_ATTRIBUTE(EAXReverb, decay_hflimit)

	ALEFFECT_EXPOSE_PRESET(generic)
	ALEFFECT_EXPOSE_PRESET(paddedcell)
	ALEFFECT_EXPOSE_PRESET(room)
	ALEFFECT_EXPOSE_PRESET(bathroom)
	ALEFFECT_EXPOSE_PRESET(livingroom)
	ALEFFECT_EXPOSE_PRESET(stoneroom)
	ALEFFECT_EXPOSE_PRESET(auditorium)
	ALEFFECT_EXPOSE_PRESET(concerthall)
	ALEFFECT_EXPOSE_PRESET(cave)
	ALEFFECT_EXPOSE_PRESET(arena)
	ALEFFECT_EXPOSE_PRESET(hangar)
	ALEFFECT_EXPOSE_PRESET(carpetedhallway)
	ALEFFECT_EXPOSE_PRESET(hallway)
	ALEFFECT_EXPOSE_PRESET(stonecorridor)
	ALEFFECT_EXPOSE_PRESET(alley)
	ALEFFECT_EXPOSE_PRESET(forest)
	ALEFFECT_EXPOSE_PRESET(city)
	ALEFFECT_EXPOSE_PRESET(mountains)
	ALEFFECT_EXPOSE_PRESET(quarry)
	ALEFFECT_EXPOSE_PRESET(plain)
	ALEFFECT_EXPOSE_PRESET(parkinglot)
	ALEFFECT_EXPOSE_PRESET(sewerpipe)
	ALEFFECT_EXPOSE_PRESET(underwater)
	ALEFFECT_EXPOSE_PRESET(drugged)
	ALEFFECT_EXPOSE_PRESET(dizzy)
	ALEFFECT_EXPOSE_PRESET(psychotic)
	ALEFFECT_EXPOSE_PRESET(castle_smallroom)
	ALEFFECT_EXPOSE_PRESET(castle_shortpassage)
	ALEFFECT_EXPOSE_PRESET(castle_mediumroom)
	ALEFFECT_EXPOSE_PRESET(castle_largeroom)
	ALEFFECT_EXPOSE_PRESET(castle_longpassage)
	ALEFFECT_EXPOSE_PRESET(castle_hall)
	ALEFFECT_EXPOSE_PRESET(castle_cupboard)
	ALEFFECT_EXPOSE_PRESET(castle_courtyard)
	ALEFFECT_EXPOSE_PRESET(castle_alcove)
	ALEFFECT_EXPOSE_PRESET(factory_smallroom)
	ALEFFECT_EXPOSE_PRESET(factory_shortpassage)
	ALEFFECT_EXPOSE_PRESET(factory_mediumroom)
	ALEFFECT_EXPOSE_PRESET(factory_largeroom)
	ALEFFECT_EXPOSE_PRESET(factory_longpassage)
	ALEFFECT_EXPOSE_PRESET(factory_hall)
	ALEFFECT_EXPOSE_PRESET(factory_cupboard)
	ALEFFECT_EXPOSE_PRESET(factory_courtyard)
	ALEFFECT_EXPOSE_PRESET(factory_alcove)
	ALEFFECT_EXPOSE_PRESET(icepalace_smallroom)
	ALEFFECT_EXPOSE_PRESET(icepalace_shortpassage)
	ALEFFECT_EXPOSE_PRESET(icepalace_mediumroom)
	ALEFFECT_EXPOSE_PRESET(icepalace_largeroom)
	ALEFFECT_EXPOSE_PRESET(icepalace_longpassage)
	ALEFFECT_EXPOSE_PRESET(icepalace_hall)
	ALEFFECT_EXPOSE_PRESET(icepalace_cupboard)
	ALEFFECT_EXPOSE_PRESET(icepalace_courtyard)
	ALEFFECT_EXPOSE_PRESET(icepalace_alcove)
	ALEFFECT_EXPOSE_PRESET(spacestation_smallroom)
	ALEFFECT_EXPOSE_PRESET(spacestation_shortpassage)
	ALEFFECT_EXPOSE_PRESET(spacestation_mediumroom)
	ALEFFECT_EXPOSE_PRESET(spacestation_largeroom)
	ALEFFECT_EXPOSE_PRESET(spacestation_longpassage)
	ALEFFECT_EXPOSE_PRESET(spacestation_hall)
	ALEFFECT_EXPOSE_PRESET(spacestation_cupboard)
	ALEFFECT_EXPOSE_PRESET(spacestation_alcove)
	ALEFFECT_EXPOSE_PRESET(wooden_smallroom)
	ALEFFECT_EXPOSE_PRESET(wooden_shortpassage)
	ALEFFECT_EXPOSE_PRESET(wooden_mediumroom)
	ALEFFECT_EXPOSE_PRESET(wooden_largeroom)
	ALEFFECT_EXPOSE_PRESET(wooden_longpassage)
	ALEFFECT_EXPOSE_PRESET(wooden_hall)
	ALEFFECT_EXPOSE_PRESET(wooden_cupboard)
	ALEFFECT_EXPOSE_PRESET(wooden_courtyard)
	ALEFFECT_EXPOSE_PRESET(wooden_alcove)
	ALEFFECT_EXPOSE_PRESET(sport_emptystadium)
	ALEFFECT_EXPOSE_PRESET(sport_squashcourt)
	ALEFFECT_EXPOSE_PRESET(sport_smallswimmingpool)
	ALEFFECT_EXPOSE_PRESET(sport_largeswimmingpool)
	ALEFFECT_EXPOSE_PRESET(sport_gymnasium)
	ALEFFECT_EXPOSE_PRESET(sport_fullstadium)
	ALEFFECT_EXPOSE_PRESET(sport_stadiumtannoy)
	ALEFFECT_EXPOSE_PRESET(prefab_workshop)
	ALEFFECT_EXPOSE_PRESET(prefab_schoolroom)
	ALEFFECT_EXPOSE_PRESET(prefab_practiseroom)
	ALEFFECT_EXPOSE_PRESET(prefab_outhouse)
	ALEFFECT_EXPOSE_PRESET(prefab_caravan)
	ALEFFECT_EXPOSE_PRESET(dome_tomb)
	ALEFFECT_EXPOSE_PRESET(pipe_small)
	ALEFFECT_EXPOSE_PRESET(dome_saintpauls)
	ALEFFECT_EXPOSE_PRESET(pipe_longthin)
	ALEFFECT_EXPOSE_PRESET(pipe_large)
	ALEFFECT_EXPOSE_PRESET(pipe_resonant)
	ALEFFECT_EXPOSE_PRESET(outdoors_backyard)
	ALEFFECT_EXPOSE_PRESET(outdoors_rollingplains)
	ALEFFECT_EXPOSE_PRESET(outdoors_deepcanyon)
	ALEFFECT_EXPOSE_PRESET(outdoors_creek)
	ALEFFECT_EXPOSE_PRESET(outdoors_valley)
	ALEFFECT_EXPOSE_PRESET(mood_heaven)
	ALEFFECT_EXPOSE_PRESET(mood_hell)
	ALEFFECT_EXPOSE_PRESET(mood_memory)
	ALEFFECT_EXPOSE_PRESET(driving_commentator)
	ALEFFECT_EXPOSE_PRESET(driving_pitgarage)
	ALEFFECT_EXPOSE_PRESET(driving_incar_racer)
	ALEFFECT_EXPOSE_PRESET(driving_incar_sports)
	ALEFFECT_EXPOSE_PRESET(driving_incar_luxury)
	ALEFFECT_EXPOSE_PRESET(driving_fullgrandstand)
	ALEFFECT_EXPOSE_PRESET(driving_emptygrandstand)
	ALEFFECT_EXPOSE_PRESET(driving_tunnel)
	ALEFFECT_EXPOSE_PRESET(city_streets)
	ALEFFECT_EXPOSE_PRESET(city_subway)
	ALEFFECT_EXPOSE_PRESET(city_museum)
	ALEFFECT_EXPOSE_PRESET(city_library)
	ALEFFECT_EXPOSE_PRESET(city_underpass)
	ALEFFECT_EXPOSE_PRESET(city_abandoned)
	ALEFFECT_EXPOSE_PRESET(dustyroom)
	ALEFFECT_EXPOSE_PRESET(chapel)
	ALEFFECT_EXPOSE_PRESET(smallwaterroom)

	ALEFFECT_CREATE_CLASS(Reverb)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, density)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, diffusion)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, gainhf)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, decay_time)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, decay_hfratio)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, reflections_gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, reflections_delay)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, late_reverb_gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, late_reverb_delay)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, air_absorption_gainhf)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, room_rolloff_factor)
	ALEFFECT_EXPOSE_ATTRIBUTE(Reverb, decay_hflimit)

	ALEFFECT_CREATE_CLASS(Chorus)
	ALEFFECT_EXPOSE_ATTRIBUTE(Chorus, waveform)
	ALEFFECT_EXPOSE_ATTRIBUTE(Chorus, phase)
	ALEFFECT_EXPOSE_ATTRIBUTE(Chorus, rate)
	ALEFFECT_EXPOSE_ATTRIBUTE(Chorus, depth)
	ALEFFECT_EXPOSE_ATTRIBUTE(Chorus, feedback)
	ALEFFECT_EXPOSE_ATTRIBUTE(Chorus, delay)

	ALEFFECT_CREATE_CLASS(Distortion)
	ALEFFECT_EXPOSE_ATTRIBUTE(Distortion, edge)
	ALEFFECT_EXPOSE_ATTRIBUTE(Distortion, gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(Distortion, lowpass_cutoff)
	ALEFFECT_EXPOSE_ATTRIBUTE(Distortion, eqcenter)
	ALEFFECT_EXPOSE_ATTRIBUTE(Distortion, eqbandwidth)

	ALEFFECT_CREATE_CLASS(Echo)
	ALEFFECT_EXPOSE_ATTRIBUTE(Echo, delay)
	ALEFFECT_EXPOSE_ATTRIBUTE(Echo, lrdelay)
	ALEFFECT_EXPOSE_ATTRIBUTE(Echo, damping)
	ALEFFECT_EXPOSE_ATTRIBUTE(Echo, feedback)
	ALEFFECT_EXPOSE_ATTRIBUTE(Echo, spread)

	ALEFFECT_CREATE_CLASS(Flanger)
	ALEFFECT_EXPOSE_ATTRIBUTE(Flanger, waveform)
	ALEFFECT_EXPOSE_ATTRIBUTE(Flanger, phase)
	ALEFFECT_EXPOSE_ATTRIBUTE(Flanger, rate)
	ALEFFECT_EXPOSE_ATTRIBUTE(Flanger, depth)
	ALEFFECT_EXPOSE_ATTRIBUTE(Flanger, feedback)
	ALEFFECT_EXPOSE_ATTRIBUTE(Flanger, delay)

	ALEFFECT_CREATE_CLASS(FrequencyShifter)
	ALEFFECT_EXPOSE_ATTRIBUTE(FrequencyShifter, frequency)
	ALEFFECT_EXPOSE_ATTRIBUTE(FrequencyShifter, left_direction)
	ALEFFECT_EXPOSE_ATTRIBUTE(FrequencyShifter, right_direction)

	ALEFFECT_CREATE_CLASS(VocalMorpher)
	ALEFFECT_EXPOSE_ATTRIBUTE(VocalMorpher, phoneme_a)
	ALEFFECT_EXPOSE_ATTRIBUTE(VocalMorpher, phoneme_b)
	ALEFFECT_EXPOSE_ATTRIBUTE(VocalMorpher, phoneme_a_coarse_tuning)
	ALEFFECT_EXPOSE_ATTRIBUTE(VocalMorpher, phoneme_b_coarse_tuning)
	ALEFFECT_EXPOSE_ATTRIBUTE(VocalMorpher, waveform)
	ALEFFECT_EXPOSE_ATTRIBUTE(VocalMorpher, rate)

	ALEFFECT_CREATE_CLASS(PitchShifter)
	ALEFFECT_EXPOSE_ATTRIBUTE(PitchShifter, coarse_tune)
	ALEFFECT_EXPOSE_ATTRIBUTE(PitchShifter, fine_tune)

	ALEFFECT_CREATE_CLASS(RingModulator)
	ALEFFECT_EXPOSE_ATTRIBUTE(RingModulator, frequency)
	ALEFFECT_EXPOSE_ATTRIBUTE(RingModulator, highpass_cutoff)
	ALEFFECT_EXPOSE_ATTRIBUTE(RingModulator, waveform)

	ALEFFECT_CREATE_CLASS(AutoWah)
	ALEFFECT_EXPOSE_ATTRIBUTE(AutoWah, attack_time)
	ALEFFECT_EXPOSE_ATTRIBUTE(AutoWah, release_time)
	ALEFFECT_EXPOSE_ATTRIBUTE(AutoWah, resonance)
	ALEFFECT_EXPOSE_ATTRIBUTE(AutoWah, peak_gain)

	ALEFFECT_CREATE_CLASS(Compressor)
	ALEFFECT_EXPOSE_ATTRIBUTE(Compressor, onoff)

	ALEFFECT_CREATE_CLASS(Equalizer)
	ALEFFECT_EXPOSE_ATTRIBUTE(Equalizer, low_gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(Equalizer, low_cutoff)
	ALEFFECT_EXPOSE_ATTRIBUTE(Equalizer, mid1_gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(Equalizer, mid1_center)
	ALEFFECT_EXPOSE_ATTRIBUTE(Equalizer, mid1_width)
	ALEFFECT_EXPOSE_ATTRIBUTE(Equalizer, mid2_gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(Equalizer, mid2_center)
	ALEFFECT_EXPOSE_ATTRIBUTE(Equalizer, mid2_width)
	ALEFFECT_EXPOSE_ATTRIBUTE(Equalizer, high_gain)
	ALEFFECT_EXPOSE_ATTRIBUTE(Equalizer, high_cutoff)

}
